資料組合
========================================================
author: 曾意儒 Yi-Ju Tseng
autosize: true
font-family: 'Microsoft JhengHei'
navigation: slide

資料組合
====================================
type:sub-section

有時需要在資料框新增一列，或新增一行

- Row 列的組合 `rbind()`
- Column 行的組合 `cbind()`

`rbind()`和`cbind()`的參數可以是向量，也可以是資料框

資料組合 - rbind()
====================================

使用向量做資料整合範例:
```{r}
rbind(c(1,2,3), #第一列
      c(4,5,6)  #第二列
      ) 
```

資料組合 - rbind()
====================================

使用資料框與向量做資料整合範例:
```{r warning=F}
irisAdd<-rbind(iris, #資料框
      c(1,1,1,1,"versicolor")  #新增一列
      ) 
```
```{r eval=F}
tail(irisAdd,2)
```
```{r echo=F}
knitr::kable(tail(irisAdd,2)) 
```

資料組合 - cbind()
====================================

使用向量做資料整合範例:
```{r}
cbind(c(1,2,3), #第一行
      c(4,5,6)  #第二行
      ) 
```

資料組合 - cbind()
====================================

使用資料框與向量做資料整合範例:
```{r warning=F}
irisAdd<-cbind(iris, #資料框
      rep("Add",nrow(iris))  #新增一行
      ) 
```
```{r eval=F}
tail(irisAdd,1)
```
```{r echo=F}
knitr::kable(tail(irisAdd,1)) 
```

資料組合練習
====================================
type:alert
incremental:true

- 檢查內建資料集USPersonalExpenditure的觀察值與變數
- 新增一個欄位，名稱為 1965，數值分別由上到下分別為100,60,30,10,5
    - 方法一 **cbind()** + names()
    - 方法二 **$**
    
資料結合 (Join)
====================================

除了按照行列順序的組合外，更常有的情形是依照某個欄位的值作為結合依據，如：

- 用學號把以下兩個資料框結合成一個資料框
    - 學號與姓名資料框
    - 學號與宿舍床位資料框
- 用縣市名稱與年度將人口資料與醫療資源資料結合

資料結合 (Join)
====================================
原生的R環境可以用`merge()`函數將資料框結合，使用方法為`merge(資料框1,資料框2,by="結合依據欄位")`

```{r}
nameDF<-data.frame(ID=c(1,2,3,4,5),
                  Name=c("Amy","Bob","Chris","David","Emma"))
scoreDF<-data.frame(ID=c(1,2,4),
                  Score=c(60,90,50))
```

資料結合 (Join)
====================================
```{r, eval=F}
nameDF
```
```{r, echo=F}
knitr::kable(nameDF)
```
---
```{r, eval=F}
scoreDF
```
```{r, echo=F}
knitr::kable(scoreDF)
```

資料結合 (Join)
====================================
`merge(資料框1,資料框2,by="結合依據欄位")`

```{r,eval=F}
merge(nameDF,scoreDF,by="ID")
```
```{r,echo=F}
knitr::kable(merge(nameDF,scoreDF,by="ID"))
```

資料結合 (Join) 資料保留？
====================================
`merge(資料框1,資料框2,by="結合依據欄位",all=T)`

`merge(資料框1,資料框2,by="結合依據欄位",all.x=T)`

`merge(資料框1,資料框2,by="結合依據欄位",all.y=T)`

```{r,eval=F}
merge(nameDF,scoreDF,by="ID",all=T)
```
```{r,echo=F}
knitr::kable(merge(nameDF,scoreDF,by="ID",all=T))
```

資料結合 (Join) 更有效率的做法
====================================

`dplyr`套件提供更有效率的資料結合方法，包括:

- inner_join()：保留有對應到的資料
- left_join()：保留左邊資料框的所有資料
- right_join()：保留右邊資料框的所有資料
- full_join()：保留所有資料
- semi_join()
- anti_join()

資料結合 - inner_join()
====================================
只保留兩張表都有的列
使用方法 `inner_join(x, y, by = )`

```{r}
library(dplyr)
inner_join(nameDF,scoreDF,by="ID")
```

資料結合 - left_join()
====================================
- 保留左邊的表所有的列
- 使用方法 `left_join(x, y, by = )`

```{r}
library(dplyr)
left_join(nameDF,scoreDF,by="ID")
```

資料結合 - right_join()
====================================
- 保留右邊的表所有的列
- 使用方法 `right_join(x, y, by = )`

```{r}
library(dplyr)
right_join(nameDF,scoreDF,by="ID")
```

資料結合 - full_join()
====================================
保留所有的列
使用方法 `full_join(x, y, by = )`

```{r}
library(dplyr)
full_join(nameDF,scoreDF,by="ID")
```

資料結合 - semi_join()
====================================
- 留下左邊的ID也有出現在右邊的表的列，右表資料不會輸出
- 使用方法 `semi_join(x, y, by = )`

```{r}
library(dplyr)
semi_join(nameDF,scoreDF,by="ID")
```

資料結合練習
====================================
type:alert

- 下載[107各村里教育程度資料](http://data.moi.gov.tw/MoiOD/System/DownloadFile.aspx?DATA=682F4BB5-C191-4894-9902-F8F195C0B903
)
- 下載[10712各村（里）戶籍人口統計月報表](https://data.moi.gov.tw/MoiOD/System/DownloadFile.aspx?DATA=F2727722-5E3C-40AE-BB62-139AA5291DE3)
- 分別讀入兩個csv檔
- 依照區域別與村里名稱，將兩張表格結合，只留下有對應到的資料
- 請問結合後的資料有幾列？